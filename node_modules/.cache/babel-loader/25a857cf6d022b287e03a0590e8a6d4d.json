{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/React/login-example/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\nimport Input from '../UI/Input/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'USER_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passReducer = (state, action) => {\n  if (action.type === 'USER_PASS') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === 'USER_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = () => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passState, dispatchPassword] = useReducer(passReducer, {\n    value: '',\n    isValid: null\n  });\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passIsValid\n  } = passState;\n  const authCtx = useContext(AuthContext);\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('in timeout');\n      setFormIsValid(emailIsValid && passIsValid);\n    }, 500);\n    return () => {\n      console.log('Clean Up ');\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passIsValid]);\n\n  const emailChangeHandler = event => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); // setFormIsValid(\n    //   event.target.value.includes('@') && passState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'USER_PASS',\n      val: event.target.value\n    }); // setFormIsValid(\n    //   event.target.value.trim().length > 6 && emailState.isValid\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({\n      type: 'USER_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'USER_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    authCtx.onLogin(emailState.value, passState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"email\",\n        type: \"email\",\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler,\n        isValid: emailState.isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"miwLnfm9Db39OWmQmPf2u9ywnD4=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/admin/Documents/React/login-example/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","useContext","Card","classes","Button","AuthContext","Input","emailReducer","state","action","type","value","val","isValid","includes","passReducer","trim","length","Login","formIsValid","setFormIsValid","emailState","dispatchEmail","passState","dispatchPassword","emailIsValid","passIsValid","authCtx","identifier","setTimeout","console","log","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer, useContext } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\nimport Input from '../UI/Input/Input';\n\nconst emailReducer = (state, action) => {\n  if(action.type === 'USER_INPUT') {\n    return { value : action.val,  isValid: action.val.includes('@') };\n  }\n\n  if(action.type === 'USER_BLUR') {\n    return { value : state.value,  isValid: state.value.includes('@') };\n  }\n  return { value : '',  isValid: false };\n}\n\nconst passReducer = (state, action) => {\n  if(action.type === 'USER_PASS') {\n    return { value : action.val,  isValid: action.val.trim().length > 6 };\n  }\n\n  if(action.type === 'USER_BLUR') {\n    return { value : state.value,  isValid: state.value.trim().length > 6 };\n  }\n  return { value : '',  isValid: false };\n}\n\nconst Login = () => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [ emailState, dispatchEmail] = useReducer( emailReducer,{ value : '',  isValid: null } );\n  const [ passState, dispatchPassword] = useReducer( passReducer,{ value : '',  isValid: null } );\n\n\n  const {isValid : emailIsValid } = emailState;\n  const {isValid : passIsValid } = passState;\n\n  const authCtx = useContext(AuthContext);\n\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('in timeout');\n      setFormIsValid(\n        emailIsValid && passIsValid\n      );\n    } , 500)\n\n    return () => {\n      console.log('Clean Up ');\n      clearTimeout(identifier);\n    }\n  }, [emailIsValid , passIsValid])\n\n  const emailChangeHandler = (event) => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({type: 'USER_INPUT', val: event.target.value})\n\n    // setFormIsValid(\n    //   event.target.value.includes('@') && passState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({type: 'USER_PASS', val: event.target.value});\n\n    // setFormIsValid(\n    //   event.target.value.trim().length > 6 && emailState.isValid\n    // );\n  };\n\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({type: 'USER_BLUR' })\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({type: 'USER_BLUR' });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    authCtx.onLogin(emailState.value, passState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input id=\"email\" type=\"email\"             \n        value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n            isValid={emailState.isValid} ></Input>\n        <div\n          className={`${classes.control} ${\n            passState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}